---
  - name: check if user alread exists or not
    shell: "cat /etc/passwd|grep -w {{ list_item.UserID }}|wc -l"
    register: user_output
    ignore_errors: true

  - debug:
          msg: "user output ===================== {{ user_output }} "
  - set_fact:
          var_uid_exists: "{{ (user_output.stdout == '1')|ternary(true,false) }}"

#if validations are available populate  pass invalid list
  - set_fact:
      validation_result: true
  - set_fact:
      var_output_txt: "{{ var_output_txt+ list_item[keysitem]+', ' }}"
    loop: "{{ var_csv_fields.split(',') }}"   
    loop_control:
       loop_var: keysitem
  - debug:
      msg: " new output:{{ var_output_txt }}"      


  - set_fact:
      validation_result: false
      var_output_txt: "{{ var_output_txt + 'Userid exists but Password Change failed' + '\n' }}"
    when:
       - list_item.Password|length < 8 and var_uid_exists 

  - name: change password of existing user in password_change.yml file
    user:
      name: "{{ list_item.UserID }}"
      password: "{{ list_item.Password| password_hash('sha512') }}"
      update_password: always
    register: password_change_result
    when:
      - validation_result 
      - var_uid_exists
  - debug:
      msg: "================pass change result ==== {{ password_change_result| default([]) }} "
      
  - name: Clear logs command 1
    shell: "/sbin/pam_tally2 --user {{ list_item.UserID }} --reset"
    register: shellresult1
    when:
      - validation_result
      - var_uid_exists  
  - debug:
        msg: "==========shell commands pass change result ==== {{ shellresult1| default([]) }} "
  - name: Clear logs Command 2
    shell: "pam_tally2 -u {{ list_item.UserID }} -r -f /var/log/faillog --quiet"
    register: shellresult2
    when:
      - validation_result
      - var_uid_exists  
  - debug:
        msg: "==========shell commands pass change result ==== {{ shellresult2| default([]) }} "
  - name: Clear logs Command 3
    shell: "/sbin/pam_tally2 --file  /var/log/faillog -u {{ list_item.UserID }} -r --quiet"
    register: shellresult3
    when:
      - validation_result
      - var_uid_exists
  - debug:
        msg: "==========shell commands pass change result ==== {{ shellresult3| default([]) }} "
  - name: Clear logs Command 4
    shell: "/usr/bin/faillog -r -u {{ list_item.UserID }}"
    register: shellresult4
    when:
      - validation_result
      - var_uid_exists  
  - debug:
        msg: "==========shell commands pass change result ==== {{ shellresult4| default([]) }} "
  - name: Clear logs command 5
    shell: "chage -d0 {{ list_item.UserID }}"
    when:
      - validation_result
      - var_uid_exists

  - set_fact:
       var_output_txt: "{{ var_output_txt + 'Password Change Successful' + '\n' }}"
    when:
       - validation_result
       - var_uid_exists  
  - set_fact:
        var_output_txt: "{{ var_output_txt + 'User id '+ list_item.UserID+' does not exist. Password Change failed' + '\n' }}"
    when:
       - not var_uid_exists

