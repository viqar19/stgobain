---
  - debug:
       msg: "list item recieved ===================== {{ list_item }} "

  - name: check if user alread exists or not
    shell: "groups {{ list_item.UserID }}|cut -d ':' -f 2"
    register: user_output
    ignore_errors: true

  - debug:
       msg: "user output ===================== {{ user_output }} "
  - set_fact:
          currentgrouplist: "{{ (user_output.stdout|trim).split(' ') }}"
    when:
       user_output.stdout !=''
  - debug:
            msg: "split {{  currentgrouplist }} "
  - name: Split secondary groups in list
    set_fact:
         secondarygrouplist: "{{ list_item.Secondarygroup.split('|') }}"
    when:
            -   list_item.Secondarygroup|length > 0
  - debug:
      msg: "left over groups: {{ currentgrouplist| difference(secondarygrouplist)|default('') }}"
  - name: add user with/without homedirectory
    user:
        name: "{{ list_item.UserID }}"
        groups: "{{ currentgrouplist| difference(secondarygrouplist)|default('') }}"
        state: present
    register: user_add_result
    ignore_errors: true
    when:
        - user_output.stdout != ''
  - set_fact:
        var_output_txt: "{{ var_output_txt+ list_item[keysitem]+', ' }}"
    loop: "{{ var_csv_fields.split(',') }}"   
    loop_control:
                loop_var: keysitem
  - debug:
        msg: " new output:{{ var_output_txt }}"      

  - set_fact:
       var_output_txt: "{{ var_output_txt + 'user removed from the Groups Successfully' + '\n' }}"       
    when:
       - user_add_result is defined and user_add_result.changed == True

  - set_fact:
       var_output_txt: "{{ var_output_txt + 'Group doesnt exist' + '\n' }}"       
    when:
       - user_add_result.msg is defined and user_add_result.msg.find("Group does not exist") != 1

  - set_fact:
         var_output_txt: "{{ var_output_txt+ 'User already removed from group ' + '\n' }}"
    when:
         - user_add_result.changed == False


